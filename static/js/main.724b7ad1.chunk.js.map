{"version":3,"sources":["My_components/Header.js","My_components/Activity.js","My_components/Exercises.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","href","title","Activity","activity","onDelete","onSet","playpause","appendid","str","c","durid","sno","waitid","timesid","pgid","ppid","id","onClick","style","padding","role","width","htmlFor","type","Exercises","onStart","exercises","map","addex","App","setExercises","filter","new_activity","audio","Audio","playsound","play","strToint","ans","temp","i","length","strt","x","ppbtn","document","getElementById","times","check","innerHTML","background","playone","cur","pgbar","inc","y","duration","wait","setTimeout","useState","name","value","n","sn","nactivity","nnactivity","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.724b7ad1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = (props) => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                {/* <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"#\">Link</a>\r\n                    </li>\r\n                </ul>\r\n                </div> */}\r\n            </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Activity = ({activity,onDelete,onSet,playpause}) => {\r\n    const appendid = (str, c)=>{\r\n        str+=c\r\n        return str\r\n    }\r\n\r\n    let durid=appendid(activity.sno,'d')\r\n    let waitid=appendid(activity.sno,'w')\r\n    let timesid=appendid(activity.sno,'t')\r\n    let pgid=appendid(activity.sno,'p')\r\n    let ppid=appendid(activity.sno,'q')\r\n\r\n    const pgBar = { \r\n        width: \"0%\",\r\n      };\r\n\r\n    const pgPad = {\r\n        padding: \"0\"\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"row g-2\">\r\n            <div className=\"col row g-2 align-items-center\">\r\n                <button className=\"col-auto btn btn-primary btn-sm mx-2\" id={ppid} onClick={()=>{playpause(activity)}}>Play</button>\r\n                <div className=\"col-7 progress\" style={pgPad}>\r\n                        <div className=\"progress-bar progress-bar-striped\" id={pgid} role=\"progressbar\" style={pgBar} aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\">0</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                <label htmlFor=\"Exercise-name\" className=\"form-label my-1\">Exercise Name : </label>\r\n                <input type=\"text\" className=\"form-control\" id={activity.sno}/>\r\n                <div className=\"row g-3 align-items-center my-2\">\r\n                    <div className=\"col-auto\">\r\n                        <label htmlFor=\"duraion-input\" className=\"col-form-label\">Duration : </label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <input type=\"number\" id={durid} className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <span className=\"form-text\">\r\n                        Duration of exercise\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row g-3 align-items-center my-2\">\r\n                    <div className=\"col-auto\">\r\n                        <label htmlFor=\"wait-input\" className=\"col-form-label\">Wait : </label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <input type=\"number\" id={waitid} className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <span className=\"form-text\">\r\n                        Wait between each exercise\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row g-3 align-items-center my-2\">\r\n                    <div className=\"col-auto\">\r\n                        <label htmlFor=\"times-input\" className=\"col-form-label\">Times : </label>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <input type=\"number\" id={timesid} className=\"form-control\"/>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <span className=\"form-text\">\r\n                        Number of times this exercise will go\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-success btn-sm mx-2\" onClick={()=>{onSet(activity)}}>Set</button>\r\n                <button className=\"btn btn-danger btn-sm\" onClick={()=>{onDelete(activity)}}>Delete</button>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport {Activity} from \"./Activity\"\r\n\r\n\r\n\r\nexport const Exercises = (props) => {\r\n\r\n    return (\r\n        <div  className=\"container my-3\">\r\n            <div className=\"row g-2\">\r\n                <div className=\"col\">\r\n                    <h1>Exercises</h1>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <button className=\"btn btn-success mx-2\" onClick={()=>{props.onStart()}}>Start</button>\r\n                </div>\r\n            </div>\r\n            {props.exercises.map((activity)=>{\r\n                return <Activity activity={activity} key={activity.sno} onDelete={props.onDelete} onSet={props.onSet} playpause={props.playpause}/>\r\n            })}\r\n\r\n            <button className=\"btn btn-sm btn-success\" onClick={()=>{props.addex()}}>Add Exercise</button>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport {Header} from \"./My_components/Header\"\nimport {Exercises} from \"./My_components/Exercises\"\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const onDelete = (activity)=>{\n    setExercises(exercises.filter((new_activity)=>{\n      return new_activity!==activity\n    }))\n  }\n\n  let audio = new Audio('https://www.soundjay.com/buttons/sounds/beep-07a.mp3');\n\n    const playsound = ()=>{\n      audio.play();\n    }\n\n    const strToint = (str)=>{\n      let n=str.length\n      let ans=0\n      let temp=1\n      for(let i=n-1;i>=0;i--)\n      {\n          ans+=temp*(str[i]-'0')\n          temp*=10\n      }\n      return ans\n    }\n\n  let strt=false\n\n  const playpause = (activity) =>{\n    let i\n    for(let x=0;x<exercises.length;x++)\n    {\n      if(exercises[x].sno===activity.sno)\n      {\n        i=x\n        break\n      }\n    }\n\n    let ppid=appendid(activity.sno,'q')\n    let ppbtn=document.getElementById(ppid)\n\n    if(activity.times!==0)\n    {\n    if(activity.check)\n    {\n      ppbtn.innerHTML=\"Pause\"\n      ppbtn.style.background=\"rgb(200,200,0,1)\"\n      activity.check=false\n       playone(activity,i,activity.cur)\n    }\n    else\n    {\n      ppbtn.style.background=\"#0d6efd\"\n      ppbtn.innerHTML=\"Play\"\n      activity.check=true\n    }\n  }\n  }\n\n  const playone = (activity,i,temp)=>{\n\n    if(activity.cur===2*activity.times+1) \n    {\n      activity.cur=0\n      playpause(activity)\n      let pgid=appendid(activity.sno,'p')\n      let pgbar=document.getElementById(pgid)\n      pgbar.style=\"width: 0%\"\n      if(strt) \n      {\n        if(i+1===exercises.length) \n        {\n          strt=false\n          return\n        }\n        exercises[i+1].cur=0\n        playpause(exercises[i+1])\n      }\n      return\n    }\n\n    if(activity.check)\n    {\n      return\n    }\n    if(activity.cur===0) \n    {\n      playsound() \n      activity.cur++\n    }\n    else if(activity.cur!==temp) \n    {\n      playsound()\n      activity.cur++\n    }\n    else temp--\n\n    if(activity.cur%2===1 && activity.cur!==1)\n    {\n      let pgid=appendid(activity.sno,'p')\n      let pgbar=document.getElementById(pgid)\n      let inc=((activity.cur-1)/(2*activity.times))*100\n      pgbar.style=\"width: \"+inc+\"%\"\n      pgbar.innerHTML=(activity.cur-1)/2\n    }\n\n    let y\n    if(activity.cur%2===1) y=activity.duration\n    else y=activity.wait\n\n    if(activity.cur===2*activity.times)\n    {\n      setTimeout(()=>{\n        playsound()\n      },(y+0.5)*1000)\n    }\n    setTimeout(()=>{\n      playone(activity,i,temp)\n    },y*1000)\n  }\n\n  const onStart = ()=>{\n    strt=true\n    for(let i=0;i<exercises.length;i++)\n    {\n      exercises[i].cur=0\n      let pgid=appendid(exercises[i].sno,'p')\n      let pgbar=document.getElementById(pgid)\n      pgbar.style=\"width: 0%\"\n    }\n    playpause(exercises[0])\n  }\n\n  const appendid = (str, c)=>{\n      str+=c\n      return str\n  }\n\n  const onSet = (activity)=>{\n    let durid=appendid(activity.sno,'d')\n    let waitid=appendid(activity.sno,'w')\n    let timesid=appendid(activity.sno,'t')\n    \n    activity.name=document.getElementById(activity.sno).value\n    activity.duration=strToint(document.getElementById(durid).value)\n    activity.wait=strToint(document.getElementById(waitid).value)\n    activity.times=strToint(document.getElementById(timesid).value)\n    activity.cur=0\n    activity.check=true\n\n    let n=exercises.length\n    for(let i=0;i<n-1;i++)\n    {\n      if(exercises[i].sno===activity.sno)\n      {\n        exercises[i]=activity\n        break\n      }\n    }\n\n    setExercises(exercises)\n  }\n\n  const [exercises, setExercises] = useState([\n    {\n      sno: 1,\n      name: \"Ex1\",\n      duration: 0,\n      wait: 0,\n      times: 0,\n      cur: 0,\n      check: true\n    },\n    {\n      sno: 2,\n      name: \"Ex2\",\n      duration: 0,\n      wait: 0,\n      times: 0,\n      cur: 0,\n      check: true\n    }\n  ]\n  );\n\n  \n  const addex = ()=>{\n    let n=exercises.length\n\n    let sn\n    if(n===0) sn=0\n    else sn=exercises[n-1].sno\n    let nactivity={\n      sno:sn+1,\n      name:\"Ex\"+sn+1,\n      duration:0,\n      wait:0,\n      times:0,\n      cur:0,\n      check: true,\n    }\n\n    let nnactivity={\n      sno:sn+2,\n      name:\"Ex\"+sn+2,\n      duration:0,\n      wait:0,\n      times:0,\n      cur:0,\n      check: true,\n    }\n    exercises.push(nactivity)\n    exercises.push(nnactivity)\n    onDelete(nnactivity)\n}\n\n  return (\n    <>\n    <Header title=\"Exercise counter\"/>\n    <Exercises exercises={exercises} onDelete={onDelete} onSet={onSet} onStart={onStart} playpause={playpause} addex={addex}/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}